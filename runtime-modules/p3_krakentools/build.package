#!/usr/bin/env perl

use strict;

use Carp;
use File::Copy;
use File::Basename;
use File::Path 'make_path';
use Cwd 'abs_path';

my $dest = $ENV{TARGET} || "/kb/runtime";
my $parallel = 4;

if (@ARGV)
{
    $dest = shift;
    print STDERR "Overriding destination to $dest\n";
}
my $runtime = $dest;
if (@ARGV)
{
    $runtime = shift;
}

# d4a2fbe2833c2392a724697c0c97a3014e748474 is commit as of November 2023 with
# krona report fix.
my $tag = "d4a2fbe2833c2392a724697c0c97a3014e748474";
#my $vers = "1.2";
#my $tag = "v$vers";

my $repo = "https://github.com/jenniferlu717/KrakenTools";

my $dir = "KrakenTools";

system("rm", "-rf", $dir);
run("git", "clone", $repo, $dir);
chdir($dir) or die "cannot chdir $dir: $!";
run("git", "checkout", "$tag");
for my $file (<*.py>, <DiversityTools/*.py>)
{
    my $f = basename($file);
    print "Install $file\n";
    my $dstfile = "$dest/bin/$f";

    open(IN, "<", $file) or die "Cannot open $file: $!";
    open(OUT, ">", $dstfile) or die "Cannot write $dstfile: $!";
    print OUT "#!$dest/bin/python3\n";
    while (<IN>)
    {
	print OUT "$_";
    }
    close(IN);
    close(OUT);
    # copy($file, "$dest/bin/$f") or die "Cannot copy $file to $dest/bin/$f: $!";
    chmod(0755, "$dest/bin/$f") or die "Cannot chmod $dest/bin/$f: $!";
}

sub run
{
    print "@_\n";
    my $rc = system(@_);
    $rc == 0 or die "Command failed with rc=$rc: @_\n";
}
