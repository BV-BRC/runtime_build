#!/usr/bin/env perl

use strict;
use File::Find;
use File::Path qw(make_path);
use Cwd;
my $cwd = getcwd();

my $dest = $ENV{TARGET} || "/kb/runtime";
if (@ARGV)
{
    $dest = shift;
}
print "using $dest as installation directory\n";

make_path("$dest/bin");

# http://eddylab.org/software/tRNAscan-SE/tRNAscan-SE.tar.gz

# http://eddylab.org/software/tRNAscan-SE/tRNAscan-SE-1.3.1.tar.gz

my $vers = "1.3.1";
my $url = "http://eddylab.org/software/tRNAscan-SE/tRNAscan-SE-$vers.tar.gz";
my $dir = "tRNAscan-SE-$vers";


#
# tRNAscan needs a custom PERL5LIB, so we will give it its own folder 
# and generate a wrapper script.
#
my $app_path = "$dest/tRNAscan-SE-$vers";
make_path($app_path);

run("curl", "-O", "-L", $url);

system("rm", "-rf", $dir);
run("tar",  "xvfz",  "$dir.tar.gz");

chdir $dir or die "could not chdir $dir: $!";

#
# patch sequence lengths
#

run("sed", "-i", "-e", "s/NAMELEN 64/NAMELEN 500/", "-e", "s/DESCLEN 500/DESCLEN 1000/", "squid.h");

my @make_opts = ("PERLDIR=$dest/bin", "HOME=$app_path");

run("make", @make_opts);
run("make", @make_opts, "install");

open(WRAP, ">", "$dest/bin/tRNAscan-SE") or die "Cannot write $dest/bin/tRNAscan-SE: $!";
print WRAP <<END;
#!/bin/sh

export PERL5LIB=$app_path/bin:\$PERL5LIB
export PATH=$app_path/bin:\$PATH

exec $app_path/bin/tRNAscan-SE "\$@"

END

chmod(0755, "$dest/bin/tRNAscan-SE") or die "chmod failed: $!";

#
# Need a recursive chmod since some folders didn't end up with proper x perms.
#
system("find", $app_path, "-type", "d", "-exec", "chmod", "a+x", "{}", ';');

sub run
{
    my(@cmd) =@_;
    my $rc = system(@cmd);
    if ($rc != 0)
    {
	die "Command failed with rc=$rc: @cmd\n";
    }
}

