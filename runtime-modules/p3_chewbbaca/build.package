#!/usr/bin/env perl

use strict;

use Carp;
use File::Basename;
use Cwd 'abs_path';

my $dest = $ENV{TARGET} || "/kb/runtime";
my $parallel = 4;

if (@ARGV)
{
    $dest = shift;
    print STDERR "Overriding destination to $dest\n";
}
my $runtime = $dest;
if (@ARGV)
{
    $runtime = shift;
}

my $p3 = "/disks/patric-common/runtime";
if (! -d $p3)
{
    $p3 = $dest;
    if (! -d $p3)
    {
	die "Cannot find $p3\n";
    }
}
my $build_tools = "$p3/build-tools";

my $vers = "3.3.10";
my $app_dest = "$dest/chewbbaca-$vers";
run("rm", "-rf", $app_dest);

run(". $dest/conda/bin/activate; conda create -y -p $app_dest -c bioconda -c conda-forge chewbbaca=$vers");

for my $exe (qw(chewBBACA.py))
{
    my $src = "$app_dest/bin/$exe";
    -x $src or die "Src $src does not exist\n";
    my $edest = "$dest/bin/$exe";
    if (-e $edest)
    {
        unlink($edest) or die "Cannot unlink $edest: $!";
    }
    open(F, ">", $edest) or die "Error opening $edest: $!";
    print F <<END;
#!/bin/bash
export PATH=$app_dest/bin:\$PATH
$src "\$\@"
END
    close(F) or die "Error closing $edest: $!";
    chmod(0755, $edest) or die "chmod $edest failed: $!";

}

sub run
{
    print "@_\n";
    my $rc = system(@_);
    $rc == 0 or die "Command failed with rc=$rc: @_\n";
}
