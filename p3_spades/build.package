#!/usr/bin/env perl

use strict;

use Carp;
use File::Basename;
use Cwd 'abs_path';

my $dest = $ENV{TARGET} || "/kb/runtime";
if (@ARGV)
{
    $dest = shift;
    print STDERR "Overriding destination to $dest\n";
}

my $parallel = 4;

my $build_tools = "$dest/build-tools";
$ENV{PATH} = "$build_tools/bin:$ENV{PATH}";

$ENV{CC} = "$build_tools/bin/gcc";
$ENV{CXX} = "$build_tools/bin/g++";
system("printenv");
my $vers = "3.11.1";
$dest = "$dest/spades-$vers";

-d $dest || mkdir $dest;

# http://spades.bioinf.spbau.ru/release3.9.0/SPAdes-3.9.0.tar.gz

my $package_dir = "SPAdes-${vers}";
my $package_tar = "$package_dir.tar.gz";
my $package_url = "http://spades.bioinf.spbau.ru/release${vers}/$package_tar";

if (! -s $package_tar)
{
    system("curl", "-o", $package_tar, "-L", $package_url);
}

run("rm", "-rf", $package_dir);
run("tar", "xzfp", $package_tar);
chdir($package_dir) or die "cannot chdir $package_dir: $!";

#
# We need to add an RPATH setting.
# 

chdir("src") or die "Cannot chdir src: $!";
rename("CMakeLists.txt", "CMakeLists.txt.bak") or die "Cannot rename CMakeLists.txt: $!";
open(O, "<", "CMakeLists.txt.bak") or die"Cannot open CMakeLists.txt.bak: $!";
open(N, ">", "CMakeLists.txt") or die"Cannot open CMakeLists.txt: $!";
while (<O>)
{
    last unless /^#/;
    print N $_;
}
print N "SET(CMAKE_INSTALL_RPATH \"$build_tools/lib64\")\n";
print N $_;
while (<O>)
{
    print N $_;
}
close(O);
close(N);
chdir("..");

$ENV{PREFIX} = $dest;
run("./spades_compile.sh");

sub run
{
    print "@_\n";
    my $rc = system(@_);
    $rc == 0 or die "Command failed with rc=$rc: @_\n";
}
