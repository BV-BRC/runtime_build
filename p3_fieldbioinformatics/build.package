#!/usr/bin/env perl

use strict;

use Carp;
use File::Basename;
use Cwd 'abs_path';

my $dest = $ENV{TARGET} || "/kb/runtime";
my $parallel = 4;

if (@ARGV)
{
    $dest = shift;
    print STDERR "Overriding destination to $dest\n";
}
my $runtime = $dest;
if (@ARGV)
{
    $runtime = shift;
}

my $p3 = "/disks/patric-common/runtime";
if (! -d $p3)
{
    $p3 = $dest;
    if (! -d $p3)
    {
	die "Cannot find $p3\n";
    }
}
my $build_tools = "$p3/build-tools";

my $app_dest = "$dest/fieldbioinformatics";

$ENV{PATH} = "$build_tools/bin:$ENV{PATH}";
#
# For artic we need to rely on the conda configuration that was set up by p3_conda
#

run('rm', "-rf", "fieldbioinformatics", $app_dest);
run("git", "clone", "https://github.com/artic-network/fieldbioinformatics.git");
chdir("fieldbioinformatics") or die;
run("git", "checkout", "23a8460f5b881c5b2712c0381e0ec4dc84d38359");
run(". $dest/conda/bin/activate; mamba env create -p $app_dest -f environment.yml; which python");

#
#for my $p (<$app_dest/bin/artic*>)
#{
#    my $f = basename($p);
#    my $d = "$dest/bin/$f";
#    unlink($d);
#    symlink($p, $d) or die "Cannot symlink $p $d: $!";
#}

sub run
{
    print "@_\n";
    my $rc = system(@_);
    $rc == 0 or die "Command failed with rc=$rc: @_\n";
}
