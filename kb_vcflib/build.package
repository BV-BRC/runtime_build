#!/usr/bin/env perl

use strict;
use File::Find;
use File::Path qw(make_path);
use Cwd;
my $cwd = getcwd();

my $dest = $ENV{TARGET} || "/kb/runtime";
if (@ARGV)
{
    $dest = shift;
}

my $build_tools = $ENV{BUILD_TOOLS} // "$dest/build-tools";
if (-d $build_tools)
{
        $ENV{PATH} = "$build_tools/bin:$ENV{PATH}";
}
else
{
        warn "No build tools in $build_tools\n";
}


$ENV{CC} = "$build_tools/bin/gcc";
$ENV{CXX} = "$build_tools/bin/g++";
$ENV{CPPFLAGS} = "-I$dest/include";

print "using $dest as installation directory\n";
system ("mkdir", "-p", $dest) unless -e $dest;

system("rm", "-rf", "vcflib");
run("git", "clone", "https://github.com/vcflib/vcflib.git");

chdir "vcflib" or die "cannot chdir vcflib: $!";
run("git", "checkout", "v1.0.9");
#run("git", "checkout", "cbb6c119c35094a7058ad51e6e0bc460aa4b7732");
run("git", "submodule", "update", "--init", "--recursive");
run("mkdir", "-p", "build");
run("patch", "-p0", "-i", "../cmake.diff");
chdir "build" or die "cannot chdir build: $!";
run("cmake", "-DCMAKE_INSTALL_PREFIX=$dest", "-DZIG=OFF", "..");
run("make -j 6");
run("cp -v bin/* $dest/bin/.");

sub run
{
    my(@cmd) =@_;
    my $rc = system(@cmd);
    if ($rc != 0)
    {
	die "Command failed with rc=$rc: @cmd\n";
    }
}
