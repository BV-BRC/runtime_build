#!/usr/bin/env perl

#
# Build gcc for modern build toolchain.
#

use strict;
use File::Basename;
use File::Find;
use File::Path qw(make_path);
use Cwd qw(abs_path getcwd);
my $cwd = getcwd();

use Getopt::Long::Descriptive;

my($opt, $usage) = describe_options("%c %o [target]",
				    ["subdir=s", "Install into this subdirectory of the target",
					{ default => "build-tools" }],
				    ["help|h", "Show this usage message"]);
print($usage->text), exit if $opt->help;
die($usage->text) if @ARGV > 1;

my $top_dest = $ENV{TARGET} || "/kb/runtime";
if (@ARGV)
{
    $top_dest = shift;
}

my $dest = $top_dest;
$dest .= "/" . $opt->subdir if $opt->subdir;

print "using $dest as installation directory\n";
system ("mkdir", "-p", $dest) unless -e $dest;

my $dir;
$ENV{PATH} = "$dest/bin:$ENV{PATH}";

$dir = download_tool("http://mirror.team-cymru.org/gnu/gcc/gcc-4.9.3/gcc-4.9.3.tar.gz", $dest);
mkdir("gcc-build") or die "mkdir gcc-build failed: $!";
do_chdir($dir);
run("../$dir/contrib/download_prerequisites");

do_chdir($cwd);
do_chdir("gcc-build");
run("../$dir/configure", "--prefix", $dest, "--disable-multilib");
run("make", "-j", 6);
run("make", "install");

sub download_tool
{
    my($url, $dest) = @_;

    my $file = basename($url);
    my($dir,$comp) = $file =~ /^(.*)\.(tar\.gz|tgz|tar\.bz2)$/;

    my %comp_option = ('tar.gz' => 'z',
		       'tgz' => 'z',
		       'tar.bz2' => 'j');
    my $comp_option = $comp_option{$comp};

    if (! -s $file)
    {
	run("curl", "-o", $file, "-L", $url);
    }

    system("rm", "-rf", $dir);
    run("tar",  "xf$comp_option",  $file);

    -d $dir or die "$dir not found after extraction";
    return $dir;
}

sub build_tool
{
    my($dir, $dest) = @_;

    chdir $dir or die "could not chdir $dir: $!";

    run("./configure", "--prefix", $dest);
	
    run("make", "-j", "6");
    run("make", "install");
}
    
sub do_chdir
{
    my($dir) = @_;
    if (!chdir($dir))
    {
	my $here = getcwd();
	die "chdir $dir from $here failed: $!";
    }
}

sub run
{
    my(@cmd) =@_;
    print "@cmd\n";
    my $rc = system(@cmd);
    if ($rc != 0)
    {
	die "Command failed with rc=$rc: @cmd\npath=$ENV{PATH}\n";
    }
}
