#!/usr/bin/env perl

use strict;
use File::Find;
use File::Copy;
use File::Path qw(make_path);
use Cwd;
my $cwd = getcwd();

my $dest = $ENV{TARGET} || "/kb/runtime";
if (@ARGV)
{
    $dest = shift;
}
print "using $dest as installation directory\n";
system ("mkdir", "-p", $dest) unless -e $dest;

my $build_tools = $ENV{BUILD_TOOLS} || "/disks/patric-common/runtime/gcc-4.9.3";

$ENV{PATH} = "$build_tools/bin:$ENV{PATH}";
$ENV{PATH} = "$dest/bin:$ENV{PATH}";
#$ENV{CFLAGS} = "-I$dest/include -D__STDC_LIMIT_MACROS -fcommon";
$ENV{LDFLAGS} = "-Wl,-rpath,$build_tools/lib64 -Wl,-rpath,$dest/lib -Wl,-rpath,$build_tools/lib -lrt";
#$ENV{LD_LIBRARY_PATH} = join(":", "$dest/lib", "$build_tools/lib64", "$build_tools/lib");
#$ENV{LD_RUN_PATH} = join(":", "$dest/lib", "$build_tools/lib64", "$build_tools/lib");
#

my $vers = "v2.30.0";
my $url = "https://github.com/arq5x/bedtools2";

my $dir = "bedtools2";

run("rm", "-rf", $dir);
run("git", "clone", "-b", $vers, $url, $dir);

chdir($dir);
run("make", "-j", 8);

sub run
{
    my(@cmd) =@_;
    my $rc = system(@cmd);
    if ($rc != 0)
    {
	die "Command failed with rc=$rc: @cmd\n";
    }
}

