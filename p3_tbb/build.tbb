#!/usr/bin/env perl

use strict;

use Carp;
use File::Basename;
use Cwd 'abs_path';

my @parallel = ("-j", 8);

my $dest = $ENV{TARGET} || "/kb/runtime";

if (@ARGV)
{
$dest = shift;
print STDERR "Overriding destination to $dest\n";
}

my $build_tools = $ENV{BUILD_TOOLS} || "$dest/build-tools";

system("mkdir", "-p", "$build_tools/lib");
system("mkdir", "-p", "$build_tools/bin");

$ENV{PATH} = "$dest/bin:$ENV{PATH}";
$ENV{PATH} = "$build_tools/bin:$ENV{PATH}";

-d $dest || mkdir $dest;

my $dir = "oneTBB";
run("rm", "-rf", "oneTBB");
run("git", "clone", "https://github.com/oneapi-src/oneTBB.git");

chdir($dir) or die "Cannot chdir $dir $!";

run("git", "checkout", "2018_U2");

run("patch", "-p", "1", "-i", "../tbb.patch");
my $build_prefix;
open(P, "-|", "make", "info") or die "Cannot open make pipe: $!";
while (<P>)
{
    print;
    if (/tbb_build_prefix=(.*)/)
    {
	$build_prefix = $1;
    }
}
close(P) or die "Error running make pipe: $!";
$build_prefix or die "Could not find build prefix\n";

run("make", @parallel);

run("cp", "-v", <build/${build_prefix}_release/lib*.so*>, "$build_tools/lib/");
run("cp", "-v", <build/${build_prefix}_debug/lib*.so*>, "$build_tools/lib/");
run("rsync", "-arv", "include/serial", "include/tbb", "$build_tools/include/");

sub run
{
    my(@cmd) = @_;
    print "@cmd\n";
    my $rc = system(@cmd);
    $rc == 0 or die "Cmd failed with rc=$rc: @cmd\n";
}
